package com.sesame.game.library;

import java.util.Optional;

import com.sesame.game.Const;
import com.sesame.game.GameLevel;
import com.sesame.game.SudokuPuzzle;

/**
 * Introduction: 题库
 *
 * @author sesame 2022/10/14
 */
public class CaseLibrary {
    static {
        //String[][] board = new String[][] {
        //    {"", "", "", "", "", "", "", "", ""},
        //    {"", "", "", "", "", "", "", "", ""},
        //    {"", "", "8", "", "", "", "", "", ""},
        //    {"", "", "", "", "", "", "", "", ""},
        //    {"", "", "", "", "", "", "", "", ""},
        //    {"", "", "", "", "", "", "", "", ""},
        //    {"", "", "", "", "", "", "8", "", ""},
        //    {"", "1", "", "", "", "", "", "", ""},
        //    {"9", "6", "", "", "", "", "", "", ""}
        //};

        // ios 数独专家2
        //{"","","","","2","","","8","5"},
        //{"6","","2","","7","","","",""},
        //{"3","","","","","","","1",""},
        //{"7","","","9","","4","","",""},
        //{"","4","","","","","","3",""},
        //{"","","9","","","5","","2",""},
        //{"","","5","","","","2","6",""},
        //{"2","","","","8","6","1","",""},
        //{"","3","","","","2","","7",""}

        // ios 数独专家4
        //{"2","","","","8","","","1",""},
        //{"","4","","1","","","3","",""},
        //{"","","","","9","","","",""},
        //{"","","","7","","","8","4",""},
        //{"","9","","","2","1","","",""},
        //{"","","6","","","","","",""},
        //{"","3","","","","","5","8",""},
        //{"1","","","8","","","","","7"},
        //{"","2","7","","5","3","","",""}

        // ios 数独专家5
        //{"","9","","3","","","","",""},
        //{"","","","","2","9","","","1"},
        //{"6","","","","","","","","7"},
        //{"","7","","","","","","1",""},
        //{"5","","","","","","","6","4"},
        //{"","","","8","","4","","","9"},
        //{"","1","","2","","","6","",""},
        //{"7","8","","","9","","","",""},
        //{"","","4","","5","","","","3"}

        // ios 数独专家7  能解
        //{"","","","","","","","",""},
        //{"5","9","","8","","","7","",""},
        //{"","","","","2","1","8","",""},
        //{"","3","7","","","","","",""},
        //{"","5","","7","9","","","",""},
        //{"","","","","3","","1","8",""},
        //{"","","5","","","2","","",""},
        //{"8","1","","","","","","4",""},
        //{"","","6","","8","","9","","3"}

        // ios 数独专家10 能解
        //{"7","2","","","","","","6","4"},
        //{"","","","","7","6","","",""},
        //{"4","","","","","","","",""},
        //{"","","5","6","","4","1","",""},
        //{"","","","","","","","2","8"},
        //{"1","","","","5","3","","","6"},
        //{"","","","5","","","2","",""},
        //{"3","4","","1","8","","","",""},
        //{"","","","","","","","1",""}

        //ios 数独专家15
        //{"","","","","","","","","7"},
        //{"","","","7","3","","1","","5"},
        //{"8","9","","2","","","","",""},
        //{"","","","","8","","4","",""},
        //{"4","2","","9","5","","","",""},
        //{"","","5","","","3","","","2"},
        //{"","","","3","","9","","",""},
        //{"7","5","","","","4","","",""},
        //{"","","","","","","","2","3"}

        //ios 数独专家22
        //{"","5","4","","6","","","",""},
        //{"","","","","","","6","4",""},
        //{"1","","8","4","","7","","",""},
        //{"","","","","","","","9",""},
        //{"","8","","","","6","","","2"},
        //{"7","","","","1","","","",""},
        //{"","2","6","7","","","4","","1"},
        //{"","","","","5","","","6","8"},
        //{"","","9","","","","","",""}

        //ios 数独专家23
        //{"","","4","","","7","","5","8"},
        //{"","1","","","","9","","","4"},
        //{"","","5","","","","2","",""},
        //{"","6","","","","","","","7"},
        //{"","","2","","8","","3","",""},
        //{"1","","","2","","","6","",""},
        //{"","7","6","","","8","","",""},
        //{"","","","","3","","","","2"},
        //{"","","","1","","","8","",""}

    }

    private static void makeUnmutable(SudokuPuzzle puzzle) {
        for (int i = 0; i < Const.ROWS; i++) {
            for (int j = 0; j < Const.COLUMNS; j++) {
                if (puzzle.isSlotValid(i, j)) {
                    puzzle.makeMutable(i, j, false);
                }

            }
        }
    }

    public Optional<SudokuPuzzle> getByCaseType(int i) {

        String[][] case1 = new String[][] {
            {"", "", "", "", "", "", "", "", ""},
            {"", "", "", "", "", "", "", "", ""},
            {"", "", "", "", "", "", "", "", ""},
            {"", "", "", "", "", "", "", "", ""},
            {"", "", "", "", "", "", "", "", ""},
            {"", "", "", "", "", "", "", "", ""},
            {"", "", "", "", "", "", "", "", ""},
            {"", "", "", "", "", "", "", "", ""},
            {"", "", "", "", "", "", "", "", ""}
        };

        String[][] case2 = new String[][] {
            {"", "", "6", "2", "", "", "4", "", "9"},
            {"4", "2", "", "", "", "9", "", "", "7"},
            {"", "3", "", "4", "", "7", "", "", "2"},
            {"", "4", "1", "", "7", "", "", "", "6"},
            {"", "", "5", "", "", "", "", "", "4"},
            {"", "", "", "", "9", "", "5", "1", ""},
            {"", "5", "", "7", "", "3", "9", "4", ""},
            {"8", "", "", "", "4", "", "6", "", ""},
            {"", "", "4", "", "2", "", "", "", "5"},
        };

        SudokuPuzzle puzzle = new SudokuPuzzle();
        if (i == 1) {
            puzzle.setBoard(case1);
        } else if (i == 2) {
            puzzle.setBoard(case2);
        }

        makeUnmutable(puzzle);
        return Optional.of(puzzle);
    }

    public SudokuPuzzle getCase(GameLevel gameLevel, int number) {
        String[][] array;
        if (gameLevel == GameLevel.EASY) {
            array = new EasyLibrary().caseArray(number);
        } else if (gameLevel == GameLevel.NORMAL) {
            array = new NormalLibrary().caseArray(number);
        } else if (gameLevel == GameLevel.HARD) {
            array = new HardLibrary().caseArray(number);
        } else if (gameLevel == GameLevel.VIP) {
            array = new VipLibrary().caseArray(number);
        } else {
            throw new RuntimeException("should n't be here");
        }

        SudokuPuzzle puzzle = new SudokuPuzzle();
        puzzle.setBoard(array);
        makeUnmutable(puzzle);

        return puzzle;

    }

}
